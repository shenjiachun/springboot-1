syntax = "proto3";

package bamtracing;

service EventModel {
  rpc PostEvent(stream MsgReq) returns (stream MsgRsp) {};
  rpc OnlineDeviceCount (NullReq) returns (OnlineDevOrMsgRes) {};//获取当前各个产品的在线设备数量
  rpc Dev2PlatformMsgCount (MpReq) returns (OnlineDevOrMsgRes) {};//获取规定时间段内，各个产品的设备向平台发送消息的数量
  rpc Platform2DevMsgCount (MpReq) returns (OnlineDevOrMsgRes) {};//获取规定时间段内，平台向各个产品的设备发送消息的数量
  rpc GetProductName (NullReq) returns (ProductNameRes) {};//获取所有产品的名称
}

message NullReq{

}

message MpReq{
  int64 start_timestamp = 1;//起始时间戳，精确到秒
  int64 end_timestamp = 2;//结束时间戳，精确到秒
}

message OnlineDevOrMsg{
  string product_name = 1;//产品名称
  int32 count = 2;//设备数量或消息数量
}

message OnlineDevOrMsgRes{
  int64 timestamp = 1;//当前时间戳,精确到秒
  repeated OnlineDevOrMsg online_dev_or_msg = 2;
}

message ProductName{
  int64 id = 1;//产品ID
  string name = 2;//产品名称
}

message ProductNameRes{
  int64 timestamp = 1;//当前时间戳,精确到秒
  repeated ProductName product_name = 2;
}

message ReadingStru{
  string id = 1;
  int64 pushed = 2;
  string name = 3;
  int64 created = 4;
  int64 modified = 5;
  int64 origin = 6;
  string device = 7;
  string value = 8;
}


message EventStru{
  string id = 1;
  int64 pushed = 2;
  string device = 3;
  int64 created = 4;
  int64 modified = 5;
  int64 origin = 6;
  string event = 7;
  repeated ReadingStru readings =  8;
}
message MsgReq{
  repeated EventStru events =1;
}
message MsgRsp{
  int32 code = 1;
  string newId = 2;
}