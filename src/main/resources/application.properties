spring.application.name=local-grpc-client
server.port=8081

server.max-http-header-size=4048576
#spring.freemarker.cache=false
#spring.thymeleaf.cache=true

grpc.client.grpc_local_server.host=172.20.200.52
grpc.client.grpc_local_server.port=5002
grpc.client.grpc_local_server.enableKeepAlive=true
grpc.client.grpc_local_server.keepAliveWithoutCalls=true

mongodb.uri.host = 10.12.4.18
mongodb.uri.port = 27017

#热部署生效
#spring.devtools.restart.enabled=false
#设置重启的目录，添加这个目录的文件需要restart
#spring.devtools.restart.additional-paths=src/main/java
#为mybatis设置，生产环境可删除
#restart.include.mapper=/mapper-[\\w-\\.]+jar
#restart.include.pagehelper=/pagehelper-[\\w-\\.]+jar
#排除那个目录的文件1不需要restart
#spring.devtools.restart.exclude=static/**,public/**
#classpath目录下的web-inf文件夹内容修改不重启
#spring.devtools.restart.exclude=WEB-INF/**

############################################################
# Server 服务端配置
############################################################
#server.port=8088
#server.context-path=/zhangyiming
#server.error.path=/error
server.servlet.session.timeout = 600
#server.address=192.168.1.2

############################################################
# Server - tomcat
############################################################
#server.tomcat.max-threads=250
server.tomcat.uri-encoding=UTF-8
#server.tomcat.basedir=H:/springboot-tomcat-tmp
#server.tomcat.access-log-enabled=true
#server.tomcat.access-log-pattern=
#server.tomcat.accesslog.directory=
#logging.path=H:/springboot-tomcat-tmp
#logging.file=myapp.log

############################################################
# thymeleaf
############################################################
#spring.thymeleaf.prefix=classpath:/templates/
#spring.thymeleaf.suffix=.html
#spring.thymeleaf.mode=HTML5
#spring.thymeleaf.encoding=UTF-8
#spring.thymeleaf.servlet.content-type=text/html
# 关闭缓存，即时刷新，上线是需要改成true
#spring.thymeleaf.cache=false
#
spring.mvc.static-path-pattern=/static/**

############################################################
# 配置数据源相关 使用阿里巴巴的druid数据源
############################################################
spring.datasource.url=jdbc:mysql://localhost:3306/zhangyiming?useUnicode=true&characterEncoding=UTF-8&useSSL=false
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.druid.initial-size=1
spring.datasource.druid.min-idle=1
spring.datasource.druid.max-active=20
spring.datasource.druid.test-on-borrow=true
spring.datasource.druid.stat-view-servlet.allow=true

# 枚举所有数据源
#sharding.jdbc.datasource.names=afei_test,afei_user_0,afei_user_1

# afei_test这个数据源的配置
#sharding.jdbc.datasource.afei_test.type=org.apache.commons.dbcp.BasicDataSource
#sharding.jdbc.datasource.afei_test.driver-class-name=com.mysql.jdbc.Driver
#sharding.jdbc.datasource.afei_test.url=jdbc:mysql://localhost:3306/zhangyiming
#sharding.jdbc.datasource.afei_test.username=root
#sharding.jdbc.datasource.afei_test.password=root
#sharding.jdbc.datasource.afei_test.maxActive=16

# afei_user_0这个数据源的配置
#sharding.jdbc.datasource.afei_user_0.type=org.apache.commons.dbcp.BasicDataSource
#sharding.jdbc.datasource.afei_user_0.driver-class-name=com.mysql.jdbc.Driver
#sharding.jdbc.datasource.afei_user_0.url=jdbc:mysql://localhost:3306/user_database
#sharding.jdbc.datasource.afei_user_0.username=root
#sharding.jdbc.datasource.afei_user_0.password=root
#sharding.jdbc.datasource.afei_user_0.max-active=16

# afei_user_1这个数据源的配置
#sharding.jdbc.datasource.afei_user_1.type=org.apache.commons.dbcp.BasicDataSource
#sharding.jdbc.datasource.afei_user_1.driver-class-name=com.mysql.jdbc.Driver
#sharding.jdbc.datasource.afei_user_1.url=jdbc:mysql://10.12.4.24:3306/test
#sharding.jdbc.datasource.afei_user_1.username=locust
#sharding.jdbc.datasource.afei_user_1.password=123456
#sharding.jdbc.datasource.afei_user_1.max-active=16

# 默认数据源名称
#sharding.jdbc.config.sharding.default-data-source-name=afei_test
# 默认数据源不用分库分表，所以不需要配置sharding.jdbc.config.sharding.default-database-strategy...

# 指定t_user表分库分表的inline表达式--由表达式可知t_user表如何分库分表的
#sharding.jdbc.config.sharding.tables.t_user.actual-data-nodes=afei_user_0.user,afei_user_1.user

# 指定两个属性的值（sql.show=true, executor.size=100）
#sharding.jdbc.config.sharding.props.sql.show=true
#sharding.jdbc.config.sharding.props.executor.size=100

############################################################
# mybatis 配置
############################################################
# mybatis 配置
mybatis.type-aliases-package=com.zhangyiming.pojo
mybatis.mapper-locations=classpath:mapper/*.xml
# 通用 Mapper 配置
mapper.mappers=com.zhangyiming.mapper
mapper.not-empty=false
mapper.identity=MYSQL
# 分页插件配置
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql

############################################################
# REDIS 配置
############################################################
# Redis数据库索引（默认为0）
spring.redis.database=1
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=7000
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（负数表示没有限制）
spring.redis.jedis.pool.max-active=-1
# 连接池最大阻塞等待时间（负数表示没有限制）
spring.redis.jedis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=3000
spring.redis.cluster.nodes=127.0.0.1:7000,127.0.0.1:7001,127.0.0.1:7002,127.0.0.1:7003,127.0.0.1:7004,127.0.0.1:7005

spring.rabbitmq.username = guest
spring.rabbitmq.password = guest
spring.rabbitmq.host = 127.0.0.1
spring.rabbitmq.port = 5672
spring.rabbitmq.virtual-host = /
# 手动ACK 不开启自动ACK模式,目的是防止报错后未正确处理消息丢失 默认 为 none
spring.rabbitmq.listener.simple.acknowledge-mode = manual

# ============== kafka ===================
#kafka相关配置
#spring.kafka.bootstrap-servers=edge-kafka-0.kafka-svc.edge.svc.cluster.local:9093
spring.kafka.bootstrap-servers=10.12.6.24:9093
#设置一个默认组
spring.kafka.consumer.group-id=testGroup
# 指定listener 容器中的线程数，用于提高并发量
#spring.kafka.listener.concurrency=4
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=100000
spring.kafka.consumer.max-poll-records=3000

kafka.producer.servers=10.12.6.24:9093
kafka.producer.retries=3
kafka.producer.batch.size=4096
kafka.producer.linger=1
kafka.producer.buffer.memory=40960